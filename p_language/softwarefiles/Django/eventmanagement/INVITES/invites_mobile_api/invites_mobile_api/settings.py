"""
Django settings for invites_mobile_api project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import environ
import os
import sys
from decouple import config
#import dj_database_url
import dotenv

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
dotenv_file = os.path.join(BASE_DIR, ".env")
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-4v(ct)2#+zj-#z=zd!trf9h!$x3-#4c$8-nu_gca52mvc)!*s+'
#SECRET_KEY=config("SECRET_KEY")
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG=os.environ.get("DEBUG",default=True)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
        'rest_framework',
    'django_filters',
    'rest_framework.authtoken',
    "phonenumber_field",
    "corsheaders",
    "django_rq",
    "notifications",
    # custom apps
    "user",
    "public_events",
    'gift',
    "event",
    "payment",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'invites_mobile_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'invites_mobile_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': os.environ.get("INVITE_DB"),
        'NAME': os.environ.get("INVITE_DB_NAME"),
        'USER': os.environ.get("INVITE_DB_USER"),
        'PASSWORD': os.environ.get("INVITE_DB_PASSWORD"),
        'HOST': os.environ.get("INVITE_DB_HOST"),
        'PORT': os.environ.get("INVITE_DB_POST"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'user.User'

# Card related
#MAX_NUMBER_OF_CARD_PER_USER = 5
#INVITES_DEFAULT_MAIL = os.environ.get('INVITES_DEFAULT_MAIL')
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'utils.renderers.CustomRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'EXCEPTION_HANDLER': 'invites_mobile_api.exceptions.custom_exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'UNAUTHENTICATED_USER': 'user.models.AnonymousUser',
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        "rest_framework.filters.OrderingFilter",
        "rest_framework.filters.SearchFilter",
    ]
}

# cross header settings
CORS_ALLOW_ALL_ORIGINS = True

# SMS Settings
OTP_SMS_THROTTLE_FACTOR = 2
OTP_SMS_TOKEN_VALIDITY = 200
OTP_TOKEN_TEMPLATE = 'Your verification code for Invites App is {token}. Do not share this code with anyone else.'

# Card related
MAX_NUMBER_OF_CARD_PER_USER = 5
INVITES_DEFAULT_MAIL = os.environ.get('INVITES_DEFAULT_MAIL')
# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# else:
EMAIL_BACKEND = 'django_amazon_ses.EmailBackend'


#BASE_BATTER_PAY_URL = env("BASE_BATTER_PAY_URL")
#PAYMENT_MERCHANT_ID = env("PAYMENT_MERCHANT_ID")
#PAYMENT_API_KEY = env("PAYMENT_API_KEY")
#PAYMENT_GETWAY_CALLBACK_DOMAIN = env("PAYMENT_GETWAY_CALLBACK_DOMAIN")
#PAYMENT_GETWAY_FRONTEND_DOMAIN_USER = env("PAYMENT_GETWAY_FRONTEND_DOMAIN_USER")
#PAYMENT_GETWAY_FRONTEND_DOMAIN_ADMIN = env("PAYMENT_GETWAY_FRONTEND_DOMAIN_ADMIN")

# AWS credentials
#AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID")
#AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY")
#AWS_DEFAULT_REGION = env("AWS_REGION_NAME")
AWS_ACCESS_KEY_ID="AKIA2HKPXONQAYV7WSCP"
AWS_SECRET_ACCESS_KEY="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"
AWS_STORAGE_BUCKET_NAME=""
AWS_S3_CUSTOM_DOMAIN=f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
AWS_DEFAULT_REGION='public-read'
AWS_S3_OBJECT_PARAMETERS={
          'CacheControl':'max-age=86400'
}
AWS_LOCATION='static'
AWS_QUERYSTRING_AUTH=False
AWS_HEADERS={
    'Access-Control-Allow-Origin':'*'
}
DEFAULT_FILE_STORAGE='storages.backends.s3boto3.S3BotoStorage'
STATICFILES_STORAGE='storages.backends.s3boto3.S3StaticStorage'
STATIC_URL=f"https://{AWS_S3_CUSTOM_DOMAIN}/static/"
MEDIA_URL=f"https://{AWS_S3_CUSTOM_DOMAIN}/media/"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {
            "rq_console": {
                "format": "%(asctime)s %(message)s",
                "datefmt": "%H:%M:%S",
            },
        },
    'handlers': {
        "rq_console": {
            "level": "DEBUG",
            "class": "rq.utils.ColorizingStreamHandler",
            "formatter": "rq_console",
            "exclude": ["%(asctime)s"],
        },
        'console': {
            'class': 'logging.StreamHandler',
            'stream': sys.stdout
        },
    },
    'root': {
        'handlers': ['console'],
        'level': "INFO" if DEBUG else "ERROR"
    },
    'loggers': {
        "rq.worker": {
            "handlers": ["rq_console"],
            "level": "DEBUG"
        },
    }
}

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0
    }
}
